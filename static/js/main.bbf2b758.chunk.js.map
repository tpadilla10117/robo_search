{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.js","components/search-box/searchbox.js","App.js","index.js"],"names":["Card","props","className","alt","src","people","id","name","email","CardList","console","log","map","SearchBox","placeholder","handleChange","type","onChange","App","element","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredPeople","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACrB,6BAAML,EAAMI,OAAOE,OACnB,4BAAIN,EAAMI,OAAOG,YCJZC,EAAW,SAACR,GAGrB,OAFAS,QAAQC,IAAI,qBAAsBV,GAGlC,qBAAKC,UAAU,YAAf,SAEMD,EAAMI,OAAOO,KAAI,SAAAP,GAAM,OAAI,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCR1CO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOb,UAAU,SAASc,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCsCjEG,G,wDAnCb,aAAe,IAAD,8BAGZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAQG,OAAOC,SAb5C,EAAKC,MAAQ,CACXnB,OAAQ,GACRgB,YAAa,IAPH,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAK,EAAKT,SAAS,CAAEf,OAAQwB,S,oBAO1C,WACE,MAAgCC,KAAKN,MAA7BnB,EAAR,EAAQA,OAAQgB,EAAhB,EAAgBA,YAEVU,EAAiB1B,EAAO2B,QAAO,SAAA3B,GAAM,OAAIA,EAAOE,KAAK0B,cAAcC,SAASb,EAAYY,kBAE9F,OAAQ,sBAAK/B,UAAU,MAAf,UACN,6CACA,cAAC,EAAD,CAAWY,YAAY,gBAAgBC,aAAce,KAAKf,eAC1D,cAAC,EAAD,CAAUV,OAAQ0B,W,GA/BNI,cCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bbf2b758.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        {/* URL parameter to choose set of images */}\n        <img alt=\"people\" src={`https://robohash.org/${props.people.id}?set=set1&size=180x180`}/>\n        <h2>{ props.people.name }</h2>\n        <p>{props.people.email}</p>\n    </div>\n)","import React from 'react';\nimport './card-list.css';\nimport { Card } from '../card/card.component.js';\n\n/* This is a functional component */\nexport const CardList = (props) => {\n    console.log(\"Here are the props\", props);\n\n    return(\n    <div className=\"card-list\">\n        {/* this is where we access the state declared in the constructor */}\n        { props.people.map(people => <Card key={people.id} people={people}/>) \n        }\n    </div>\n    )\n}","import React from 'react';\nimport './searchbox.css';\n\nexport const SearchBox = ({ placeholder, handleChange}) => (\n    <input className=\"search\" type='search' placeholder={placeholder} onChange={handleChange} />\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/searchbox.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    /* calls constructor() method on the component class */\n    /* Gives access to this.state */\n    super();\n    /* Here we initialize a value for the default */\n    this.state = {\n      people: [],\n      searchField: ''\n    };\n  }\n\n  /* We set our state to the 'users' we fetched */\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    .then(users =>  this.setState({ people: users}));\n  }\n\n  handleChange = (element) => {\n    this.setState({ searchField: element.target.value})\n  }\n\n  render() {\n    const { people, searchField } = this.state;\n\n    const filteredPeople = people.filter(people => people.name.toLowerCase().includes(searchField.toLowerCase()) )\n\n    return (<div className=\"App\">\n      <h1>Robo Search</h1>\n      <SearchBox placeholder=\"search robots\" handleChange={this.handleChange} />\n      <CardList people={filteredPeople}/>\n    </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}